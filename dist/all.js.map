{"version":3,"sources":["connection.js","consts.js","utils.js","wot.js","connector/connector.js","connector/rest.js","connector/ws.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["\r\nclass Datasource {\r\n\r\n    constructur(connection) {\r\n        this._connection = connection;\r\n    }\r\n\r\n    getModel() {\r\n\r\n    }\r\n\r\n    getProperties() {\r\n\r\n    }\r\n\r\n    getActions() {\r\n\r\n    }\r\n\r\n    publish(endpoint, value) {\r\n\r\n    }\r\n\r\n    subscribe(endpoint) {\r\n\r\n    }\r\n}\r\n\r\nexport class QuirkDatasource extends Datasource {\r\n\r\n}\r\n\r\nexport class StrictDatasource extends Datasource {\r\n\r\n}","export const HTTP_PROTOCOL = \"http\";\r\nexport const HTTPS_PROTOCOL = \"https\";\r\nexport const WS_PROTOCOL = \"ws\";\r\nexport const WSS_PROTOCOL = \"wss\";\r\nexport const MQTT_PROTOCL = \"mqtt\";\r\n\r\nexport const PROTOCOLS = [HTTP_PROTOCOL,\r\n                          HTTPS_PROTOCOL,\r\n                          WS_PROTOCOL,\r\n                          WSS_PROTOCOL,\r\n                          MQTT_PROTOCL];\r\n\r\nexport const STRICT_MODE = Symbol(\"strict\");\r\nexport const QUIRK_MODE = Symbol(\"quirk\");","\r\n\r\nexport class CommonUtils {\r\n\r\n    static processUrl(url, params) {\r\n        for(param in params) {\r\n            url = url.replace(\"{\" + param + \"}\", params[value]);\r\n        }\r\n        return url;\r\n    }\r\n}","\r\nimport * as consts from \"consts\";\r\n\r\nfunction parseUrl(urlStr) {\r\n    if(!(url instanceof String)) {\r\n       throw new Error(\"Invalid Url type\");\r\n    }\r\n\r\n    let splitUrl = urlStr.split(\":\");\r\n    if(splitUrl.length == 0 &&\r\n       splitUrl.length > 2) {\r\n        throw new Error(\"Invalid Url structure\");\r\n    }\r\n\r\n    let protocol;\r\n    for(let p of consts.PROTOCOLS) {\r\n        if(p === splitUrl[0]) {\r\n            protocol = p;\r\n        }\r\n    }\r\n\r\n    if(!protocol) {\r\n        throw new Error(\"Invalid protocol in Url: \" + splitUrl[0]);\r\n    }\r\n\r\n    return {\r\n        protocol: protocol,\r\n        url: splitUrl[1]\r\n    };\r\n}\r\n\r\nexport const wot = {\r\n    newInstance: (urlStr, mode) => {\r\n        let [url, protocol] = parseUrl(urlStr);\r\n\r\n        switch (mode) {\r\n            case consts.STRICT_MODE:\r\n                return new StrictDatasource(url, protocol);\r\n            case consts.QUIRK_MODE:\r\n                return new QuirkDatasource(url, protocol);\r\n            default:\r\n                throw new Error(\"Invalid mode specified: \" + mode);\r\n        }\r\n    }\r\n};","import CommonUtils from '../utils'\r\n\r\nexport class Connector {\r\n    constructor(url, protocol) {\r\n        this._url = url;\r\n        this._protocol = protocol;\r\n    }\r\n\r\n    _assembleUrl(uri) {\r\n        return this._url + uri;\r\n    }\r\n\r\n    _assembleAndProcess(uri, params) {\r\n        CommonUtils.processUrl(this._assembleUrl(uri), params);\r\n    }\r\n}","import CommonUtils from '../utils'\r\nimport Connector from 'connector'\r\n\r\nconst restResources = getRestResources();\r\n\r\nclass BaseRestConnector extends Connector {\r\n\r\n    constructor(url, protocol) {\r\n        super(url, protocol);\r\n    }\r\n\r\n    getModel() {\r\n        return this._getResource(\"model\");\r\n    }\r\n\r\n    getProperties() {\r\n        return this._getResource(\"properties\");\r\n    }\r\n\r\n    getProperty(property) {\r\n        return this._getResource(\"property\", { id: property })\r\n    }\r\n\r\n    setProperty(property, values) {\r\n        return fetch(this._assembleAndProcess(\"property\", { id: property }),\r\n                    {\r\n                        method: \"PUT\",\r\n                        body: JSON.stringify(values)\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    return response.json();\r\n                });\r\n    }\r\n\r\n    getActions() {\r\n        return this._getResource(\"actions\");\r\n    }\r\n\r\n    getAction(action) {\r\n        return this._getResource(\"action\", { id: action });\r\n    }\r\n\r\n    executeAction(action, actionData = {}) {\r\n        return fetch(this._assembleAndProcess(\"executeAction\", { id: action }),\r\n                    {\r\n                        method: \"POST\",\r\n                        body: JSON.stringify(actionData)\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    return response.json();\r\n                });\r\n    }\r\n\r\n    getActionExecutionStatus(action, actionId) {\r\n        return fetch(this._assembleAndProcess(\"action\", { id: action, actionId: actionId}))\r\n                .then((response) => response.json());\r\n    }\r\n\r\n    _getResource(resourceName, params) {\r\n        return fetch(this._assembleAndProcess(restResources.get(resourceName), params))\r\n                .then((response) => response.json());\r\n    }\r\n}\r\n\r\nexport class SocketRestConnector extends BaseRestConnector {\r\n\r\n    constructor(url, ws) {\r\n        super(url);\r\n        this._ws = ws;\r\n    }\r\n\r\n    subscribe(topic, callback) {\r\n\r\n    }\r\n}\r\n\r\nexport class HttpRestConnector extends BaseRestConnector {\r\n\r\n    constructor(url) {\r\n        super(url);\r\n    }\r\n\r\n    subscribe(topic, callback) {\r\n\r\n    }\r\n}\r\n\r\nfunction getRestResources() {\r\n    var urlMap = new Map();\r\n    urlMap.set(\"model\", \"/model/\");\r\n    urlMap.set(\"properties\", \"/properties/\");\r\n    urlMap.set(\"property\", \"/properties/{id}/\");\r\n    urlMap.set(\"actions\", \"/actions/\");\r\n    urlMap.set(\"action\", \"/actions/{id}/\");\r\n    urlMap.set(\"executeAction\", \"/actions/{id}/{actionId}\");\r\n    return urlMap;\r\n}","\r\nfunction handleOpen() {\r\n\r\n}\r\n\r\nfunction handleClose() {\r\n\r\n}\r\n\r\nfunction handleMessage(message) {\r\n\r\n}\r\n\r\nfunction iniWebsocket(connector, url) {\r\n    let ws = new WebSocket(conf);\r\n    ws.onopen = handleOpen;\r\n    ws.onclose = handleClose;\r\n    ws.onmessage = handleMessage;\r\n}\r\n\r\n\r\nexport class WebSocketConnection {\r\n\r\n    constructor(url) {\r\n        this._url = url;\r\n        this._ws = ws;\r\n        this._isOpen = true;\r\n    }\r\n\r\n    _send(message) {\r\n        if(this._isOpen) {\r\n            this._ws.send(message);\r\n        }\r\n    }\r\n\r\n    publish(endpoint, value) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n        })\r\n    }\r\n\r\n    subscribe(endpoint, callback) {\r\n        return new Promise(() => {\r\n\r\n        })\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}