{"version":3,"sources":["node_modules/browser-pack/_prelude.js",".temp/impl/wot.js",".temp/impl/thing.js",".temp/impl/description.js",".temp/impl/action.js",".temp/net/protocol.js",".temp/impl/property.js",".temp/impl/event.js",".temp/impl/model.js"],"names":["_thing","require","_description","WebOfThings","type","description","Promise","resolve","reject","d","_description2","default","_thing2","uri","Wot","exports","WebThing","this","protocol","event","eventListener","e","getEvent","subscribe","unsubscribe","unsubscribeAll","action","actionParams","a","getAction","invoke","property","getProperty","getValue","value","setValue","_protocol","_event","_action","_property","ThingDescription","events","Map","actions","properties","parse","ThingEvent","ThingAction","ThingProperty","uris","getUrisMap","get","map","name","ReferenceError","keyProperty","obj","props","_iteratorNormalCompletion","_step","_iterator","Symbol","iterator","next","done","p","instance","initialize","set","hrefs","result","_step2","_iterator2","_iteratorNormalCompletion2","href","splitHref","split","console","log","length","protocolStr","_protocol2","toLowerCase","_model","_ThingModel","params","Protocol","_ref","args","_this","listeners","Set","subscribed","add","delete","listener","callback","ThingEventListener","hashCode","ThingModel","model"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Things from \"../api/wot\";\r\nimport Thing from \"../api/thing\"\r\nimport WebThing from \"./thing\";\r\nimport ThingDescription from \"./description\";\r\n\r\nclass WebOfThings implements Things {\r\n\r\n    discover(type: string): Promise<Array<Thing>> {\r\n        return null;\r\n    }\r\n\r\n    consumeDescription(description: any): Promise<Thing> {\r\n        return new Promise((resolve, reject) => {\r\n            let d = new ThingDescription(description);\r\n            resolve(new WebThing(d))\r\n        });\r\n    }\r\n\r\n    consumeDescriptionUri(uri: string): Promise<Thing> {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const Wot = new WebOfThings();","import Thing from \"../api/thing\";\r\nimport Protocol from \"../net/protocol\"\r\nimport {TrackablePromise} from \"../api/promise\";\r\nimport Events from \"../api/event\";\r\nimport Description from \"../api/description\";\r\n\r\nexport default class WebThing implements Thing {\r\n\r\n    private protocol: Protocol;\r\n\r\n    constructor(private description: Description) {\r\n                \r\n    }\r\n   \r\n    setProtocol(protocol: Protocol) {\r\n       this.protocol = protocol;\r\n    }\r\n\r\n    addListener(event:string, eventListener:Events.EventListener): Thing {\r\n        let e = this.description.getEvent(event);\r\n        e.subscribe(eventListener, this.protocol);\r\n        return this;\r\n    }\r\n    \r\n    removeListener(event:string, eventListener:Events.EventListener): Thing {\r\n        let e = this.description.getEvent(event);\r\n        e.unsubscribe(eventListener);\r\n        return this;\r\n    }\r\n    \r\n    removeAllListeners(event: string): Thing {\r\n        let e = this.description.getEvent(event);\r\n        e.unsubscribeAll();\r\n        return this;\r\n    }\r\n\r\n    invokeAction(action:string, actionParams:any):TrackablePromise<Object> {\r\n        let a = this.description.getAction(action);        \r\n        return a.invoke(actionParams);\r\n    }\r\n\r\n    getProperty(property:string):Promise<any> {        \r\n        return this.description.getProperty(property).getValue();\r\n    }\r\n\r\n    setProperty(property:string, value:any) {\r\n        return this.description.getProperty(property).setValue(value);\r\n    }\r\n\r\n    getDescription():Object {\r\n        return this.description;\r\n    }\r\n}","import Description from \"../api/description\";\r\nimport Protocol from \"../net/protocol\";\r\nimport Model from \"../api/Model\";\r\nimport Action from \"../api/action\";\r\nimport Events from \"../api/event\";\r\nimport Property from \"../api/property\";\r\nimport {ThingEvent} from \"./event\";\r\nimport {ThingAction} from \"./action\";\r\nimport {ThingProperty} from \"./property\";\r\n\r\nexport default class ThingDescription implements Description {\r\n\r\n    private events: Map<string, Event> = new Map<string, Event>();\r\n    private actions: Map<string, Action> = new Map<string, Action>();\r\n    private properties: Map<string, Property> = new Map<string, Property>();\r\n\r\n    private uris:Map<Protocol, string>;\r\n\r\n    constructor(private description: any) {\r\n        this.parse(\"events\", \"name\", this.events, ThingEvent);            \r\n        this.parse(\"actions\", \"name\", this.actions, ThingAction);            \r\n        this.parse(\"properties\", \"name\", this.properties, ThingProperty);\r\n        this.uris = this.getUrisMap(description.uris);\r\n    }\r\n\r\n    getEvent(event:string):Events.Event {\r\n        return this.get(\"events\", event);\r\n    }\r\n\r\n    getAction(action:string):Action {\r\n        return this.get(\"actions\", action);\r\n    }\r\n\r\n    getProperty(property:string):Property {        \r\n        return this.get(\"properties\", property);\r\n    }\r\n\r\n    getRawDescription():Object {\r\n        return this.description;\r\n    }\r\n\r\n    private get(map, name):any {\r\n        let value = this[map].get(name);\r\n        if(value == null) {\r\n            throw new ReferenceError();\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private parse<V>(property: string, keyProperty: string, map: any, obj: any): void {\r\n        let props = this.description[property];\r\n        if(props) {\r\n            for(let p of props) {\r\n                let instance = new obj(p);\r\n                instance.initialize(p, this);\r\n                map.set(p[keyProperty], instance);\r\n            }\r\n        }       \r\n    }\r\n\r\n    private getUrisMap(hrefs: Array<string>): Map<Protocol, string> {\r\n        let result = new Map<Protocol, string>();\r\n        if(!hrefs) {\r\n            return result;\r\n        }\r\n\r\n        for(let href of hrefs) {\r\n            let splitHref = href.split(\":\"); console.log(splitHref);\r\n            if(splitHref.length < 2) {\r\n                continue;\r\n            }        \r\n            let protocolStr = splitHref[0];           \r\n            for(let p in Protocol) {\r\n                if(p.toLowerCase() == protocolStr.toLowerCase()) { \r\n                    let protocol = Protocol[p]                           \r\n                    result.set(Protocol[protocol + \"\"], href);       \r\n                    break;\r\n                }    \r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import Action from \"../api/action\";\r\nimport ThingModel from \"./model\";\r\nimport {TrackablePromise} from \"../api/promise\";\r\n\r\nexport class ThingAction extends ThingModel implements Action {\r\n    \r\n    invoke(params:any): TrackablePromise<any> {\r\n        return null;\r\n    }\r\n}\r\n","enum Protocol {\r\n    HTTP,\r\n    HTTPS,\r\n    COAP,\r\n    WS,\r\n    WSS\r\n}\r\n\r\nexport default Protocol;","import Property from \"../api/property\";\r\nimport ThingModel from \"./model\";\r\n\r\nexport class ThingProperty extends ThingModel implements Property {\r\n \r\n\r\n    getValue(): Promise<any> {                \r\n        return new Promise((resolve, reject) => {\r\n\r\n        });\r\n    }\r\n\r\n    setValue(value: any): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            \r\n        });\r\n    }\r\n}","import Events from \"../api/event\";\r\nimport Protocol from \"../net/protocol\";\r\n//import {ProtocolConnector} from \"../connector/connector\";\r\nimport ThingModel from \"./model\";\r\n\r\nexport class ThingEvent extends ThingModel implements Events.Event {\r\n\r\n    private listeners: Set<Events.EventListener> = new Set<Events.EventListener>();\r\n    private subscribed: boolean = false;\r\n        \r\n    subscribe(eventListener:Events.EventListener, protocol:Protocol):void {\r\n        this.listeners.add(eventListener);\r\n        if(this.subscribed == false) {                \r\n            //ProtocolConnector.subscribe(this.getHrefByProtocol(protocol), this.handler);\r\n            this.subscribed = true;\r\n        }\r\n    }\r\n\r\n    unsubscribe(eventListener:Events.EventListener):void {\r\n        this.listeners.delete(eventListener);\r\n       // if(this.listeners.empty() && this.subscribed) {\r\n            //ProtocolConnector.unsubscribe(this.getHrefByProtocol(protocol));\r\n            this.subscribed = false;\r\n      //  }        \r\n    }\r\n\r\n    unsubscribeAll():void {\r\n        this.listeners = new Set<Events.EventListener>();                \r\n        //ProtocolConnector.unsubscribe(this.getHrefByProtocol(protocol));\r\n        this.subscribed = false;\r\n    }\r\n\r\n    private handler(value: any) {\r\n        for(let listener  of this.listeners) {\r\n            listener.callback(value);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ThingEventListener implements Events.EventListener {\r\n\r\n    callback:Events.ListenerCallback;\r\n    hashCode:number;\r\n\r\n    constructor(callback:Events.ListenerCallback, hashCode?:number) {\r\n        this.callback = callback;\r\n        if(this.hashCode == null) {\r\n            this.hashCode = 0;\r\n        }\r\n    }\r\n}","import Model from \"../api/model\";\r\nimport Description from \"../api/description\";\r\n\r\nabstract class ThingModel implements Model {\r\n\r\n    public name: string;\r\n    public type: any;\r\n    public hrefs: Array<string>;\r\n    private description: Description;\r\n\r\n    initialize(model: any, description: Description) {\r\n        this.name = model.name;\r\n        this.type = model[\"@type\"];\r\n        this.hrefs = model.hrefs;\r\n    }\r\n}\r\n\r\nexport default ThingModel;"]}